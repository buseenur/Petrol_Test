<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        48P/Apc7uWflyezhAAAAAElFTkSuQmCC
</value>
  </data>
</root>